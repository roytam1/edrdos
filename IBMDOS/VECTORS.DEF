;    File              : $VECTORS.DEF$
;
;    Description       :
;
;    Original Author   : DIGITAL RESEARCH
;
;    Last Edited By    : $CALDERA$
;
;-----------------------------------------------------------------------;
;    Copyright Work of Caldera, Inc. All Rights Reserved.
;      
;    THIS WORK IS A COPYRIGHT WORK AND CONTAINS CONFIDENTIAL,
;    PROPRIETARY AND TRADE SECRET INFORMATION OF CALDERA, INC.
;    ACCESS TO THIS WORK IS RESTRICTED TO (I) CALDERA, INC. EMPLOYEES
;    WHO HAVE A NEED TO KNOW TO PERFORM TASKS WITHIN THE SCOPE OF
;    THEIR ASSIGNMENTS AND (II) ENTITIES OTHER THAN CALDERA, INC. WHO
;    HAVE ACCEPTED THE CALDERA OPENDOS SOURCE LICENSE OR OTHER CALDERA LICENSE
;    AGREEMENTS. EXCEPT UNDER THE EXPRESS TERMS OF THE CALDERA LICENSE
;    AGREEMENT NO PART OF THIS WORK MAY BE USED, PRACTICED, PERFORMED,
;    COPIED, DISTRIBUTED, REVISED, MODIFIED, TRANSLATED, ABRIDGED,
;    CONDENSED, EXPANDED, COLLECTED, COMPILED, LINKED, RECAST,
;    TRANSFORMED OR ADAPTED WITHOUT THE PRIOR WRITTEN CONSENT OF
;    CALDERA, INC. ANY USE OR EXPLOITATION OF THIS WORK WITHOUT
;    AUTHORIZATION COULD SUBJECT THE PERPETRATOR TO CRIMINAL AND
;    CIVIL LIABILITY.
;-----------------------------------------------------------------------;
;
;    *** Current Edit History ***
;    *** End of Current Edit History ***
;
;    $Log$
;
;    ENDLOG

INT08_OFFSET	equ	0020h
INT08_SEGMENT	equ	INT08_OFFSET + 2

INT09_OFFSET	equ	0024h
INT09_SEGMENT	equ	INT09_OFFSET + 2

INT10_OFFSET	equ	0040h
INT10_SEGMENT	equ	INT10_OFFSET + 2

INT11_OFFSET	equ	0044h
INT11_SEGMENT	equ	INT11_OFFSET + 2

INT12_OFFSET	equ	0048h
INT12_SEGMENT	equ	INT12_OFFSET + 2

INT13_OFFSET	equ	004Ch
INT13_SEGMENT	equ	INT13_OFFSET + 2

INT14_OFFSET	equ	0050h
INT14_SEGMENT	equ	INT14_OFFSET + 2

INT15_OFFSET	equ	0054h
INT15_SEGMENT	equ	INT15_OFFSET + 2

INT16_OFFSET	equ	0058h
INT16_SEGMENT	equ	INT16_OFFSET + 2

INT17_OFFSET	equ	005Ch
INT17_SEGMENT	equ	INT17_OFFSET + 2

INT18_OFFSET	equ	0060h
INT18_SEGMENT	equ	INT18_OFFSET + 2

INT19_OFFSET	equ	0064h
INT19_SEGMENT	equ	INT19_OFFSET + 2

INT1A_OFFSET	equ	0068h
INT1A_SEGMENT	equ	INT1A_OFFSET + 2

INT1B_OFFSET	equ	006Ch
INT1B_SEGMENT	equ	INT1B_OFFSET + 2

INT1C_OFFSET	equ	0070h
INT1C_SEGMENT	equ	INT1C_OFFSET + 2

INT1D_OFFSET	equ	0074h
INT1D_SEGMENT	equ	INT1D_OFFSET + 2

INT1E_OFFSET	equ	0078h
INT1E_SEGMENT	equ	INT1E_OFFSET + 2

INT1F_OFFSET	equ	007Ch
INT1F_SEGMENT	equ	INT1F_OFFSET + 2

INT20_OFFSET	equ	0080h
INT20_SEGMENT	equ	INT20_OFFSET + 2

INT21_OFFSET	equ	0084h
INT21_SEGMENT	equ	INT21_OFFSET + 2

INT22_OFFSET	equ	0088h
INT22_SEGMENT	equ	INT22_OFFSET + 2

INT23_OFFSET	equ	008Ch
INT23_SEGMENT	equ	INT23_OFFSET + 2

INT24_OFFSET	equ	0090h
INT24_SEGMENT	equ	INT24_OFFSET + 2

INT25_OFFSET	equ	0094h
INT25_SEGMENT	equ	INT25_OFFSET + 2

INT26_OFFSET	equ	0098h
INT26_SEGMENT	equ	INT26_OFFSET + 2

INT27_OFFSET	equ	009Ch
INT27_SEGMENT	equ	INT27_OFFSET + 2

INT28_OFFSET	equ	00A0h
INT28_SEGMENT	equ	INT28_OFFSET + 2

INT29_OFFSET	equ	00A4h
INT29_SEGMENT	equ	INT29_OFFSET + 2

INT2A_OFFSET	equ	00A8h
INT2A_SEGMENT	equ	INT2A_OFFSET + 2

INT2B_OFFSET	equ	00ACh
INT2B_SEGMENT	equ	INT2B_OFFSET + 2

INT2C_OFFSET	equ	00B0h
INT2C_SEGMENT	equ	INT2C_OFFSET + 2

INT2D_OFFSET	equ	00B4h
INT2D_SEGMENT	equ	INT2D_OFFSET + 2

INT2E_OFFSET	equ	00B8h
INT2E_SEGMENT	equ	INT2E_OFFSET + 2

INT2F_OFFSET	equ	00BCh
INT2F_SEGMENT	equ	INT2F_OFFSET + 2

INT30_OFFSET	equ	00C0h
INT30_SEGMENT	equ	INT30_OFFSET + 2

INT31_OFFSET	equ	00C4h
INT31_SEGMENT	equ	INT31_OFFSET + 2

INT32_OFFSET	equ	00C8h
INT32_SEGMENT	equ	INT32_OFFSET + 2

INT33_OFFSET	equ	00CCh
INT33_SEGMENT	equ	INT33_OFFSET + 2

INT34_OFFSET	equ	00D0h
INT34_SEGMENT	equ	INT34_OFFSET + 2

INT35_OFFSET	equ	00D4h
INT35_SEGMENT	equ	INT35_OFFSET + 2

INT36_OFFSET	equ	00D8h
INT36_SEGMENT	equ	INT36_OFFSET + 2

INT37_OFFSET	equ	00DCh
INT37_SEGMENT	equ	INT37_OFFSET + 2

INT38_OFFSET	equ	00E0h
INT38_SEGMENT	equ	INT38_OFFSET + 2

INT39_OFFSET	equ	00E4h
INT39_SEGMENT	equ	INT39_OFFSET + 2

INT3A_OFFSET	equ	00E8h
INT3A_SEGMENT	equ	INT3A_OFFSET + 2

INT3B_OFFSET	equ	00ECh
INT3B_SEGMENT	equ	INT3B_OFFSET + 2

INT3C_OFFSET	equ	00F0h
INT3C_SEGMENT	equ	INT3C_OFFSET + 2

INT3D_OFFSET	equ	00F4h
INT3D_SEGMENT	equ	INT3D_OFFSET + 2

INT3E_OFFSET	equ	00F8h
INT3E_SEGMENT	equ	INT3E_OFFSET + 2

INT3F_OFFSET	equ	00FCh
INT3F_SEGMENT	equ	INT3F_OFFSET + 2

INT5B_OFFSET	equ	016Ch
INT5B_SEGMENT	equ	INT5B_OFFSET + 2

INT5C_OFFSET	equ	0170h
INT5C_SEGMENT	equ	INT5C_OFFSET + 2

INTE0_OFFSET	equ	0380h			; Concurrent DOS Vector
INTE0_SEGMENT	equ	INTE0_OFFSET + 2

INTEF_OFFSET	equ	03BCh			; GEM Interrupt Vector
INTEF_SEGMENT	equ	INTEF_OFFSET + 2

;
;	The following equates determine the vectors that will be saved
;	during a DISPATCH. A core of vectors is always saved these are
;	specified by the VEC_LOWCORE and VEC_HIGHCORE equates. Then the
;	absolute FIRST and LAST vectors that will ever be preserved are
;	specified by VEC_MINSAVE and VEC_MAXSAVE.
;
;	The VEC_DEFAULT equate specifies the default range of equates
;	that will be saved if this value is not over-ridden.
;
VEC_MINSAVE	equ	05h		; Concurrent Saves 0 to 4 
VEC_MAXSAVE	equ	0FFh		; Brief 2.01 Uses vectors > F0h
VEC_LOWCORE	equ	05h
VEC_HIGHCORE	equ	32h
VEC_LOWSPECIAL	equ	70h		; 70h-77h are hardware vectors on PC
VEC_HIGHSPECIAL	equ	77h		;  and so are specially saved/restored
VEC_DEFAULT	equ	(VEC_HIGHCORE * 0100h) + VEC_LOWCORE
