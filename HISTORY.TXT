7.01.07:
- added FAT32 support to the BDOS loader to allow booting from FAT32 partitions
- added support for category code 48h (FAT32) to generic ioctl function,
  changed get and set subfunctions to use extended BPBs again, but only for
  this category
- fixed bug in device driver initialization code that called driver interrupt
  routine without checking whether its offset had been changed by the strategy
  routine, causing Himem64 to hang after unpacking
- added DOS 7 system call int 21h/AH=73h, implemented sub function 7303h (Get
  Extended Free Disk Space)
- changed dir command to use the new free disk space routine when it is
  available and kilobytes instead of bytes for large numbers
- fixed some small Watcom C/C++ 11.0c compilation problems
- fixed bugs in disk device driver that caused Get/Set Media routines to not
  read/write the serial number and label correctly on FAT16 and LBA drives
- fixed bug in Find First/Next Matching File functions that caused volume
  labels not to be found when other attributes were also given
- fixed bug in SynchroniseBuffers routine that sometimes caused data
  inconsistensies between buffers and disk
(24.3.2004):
- restructured DR-DOS DDSC to make it more compatible with DOS 7 Extended DPB
  structure
- implemented function 7302h (Get Extended DPB)
- added alternate implementation of the int 25h/26h absolute disk read/write
  interface via function 7305h, for the few silly programs that try to use the
  so-called "extended" interface without checking if it is present
- changed the behaviour of functions 1Fh and 32h (Get DPB) to return error code
  FFh (invalid drive) for FAT32 drives; again, this was needed because some
  programs rely on this function to identify FAT32 drives
- fixed bug in disk device driver that had been introduced in WIP (2.2.2004)
  that would sometimes cause random lock-ups or crashes
- changed OEM version code in function 30h from 00h (PC DOS) to EEH (DR DOS),
  changed true version as reported by function 3306h to 7.01, let SetVer
  override this as well to make Scandisk activate its FAT32 functionality
- added drive locking/unlocking functions to the disk device driver that fake
  a successful operation to make Scandisk work again after version change
- reduced maximum cluster size reported by function 36h for FAT32 partitions to
  32K to improve compatibility with existing disk tools.
(20.4.2004):
- removed a rather dirty hack that was needed to work around a bug in the
  DR-DOS 7.03 boot sector code
- fixed bugs related to STACKS command
- added code to allow buffers, files, fcbs, stacks and drive table to be loaded
  in upper or high memory.
- added new config.sys commands HIFILES, HIFCBS, HISTACKS and HILASTDRIVE to
  load these data structures high even if DOS itself is loaded low
(30.5.2004):
- fixed bug in function 7302h (Get Extended DPB) which caused corruption of the
  DR-DOS header
- fixed bugs in functions 7302h/7303h which caused the carry flag to be set
  even on successful operation, causing DOSLFN to not recognize FAT32 drives
  properly
- fixed bug that caused DR-DOS to use the total number of clusters on drive
  instead of the highest cluster number in the DDSC structure on FAT32 drives;
  changed functions 7302h/7303h accordingly
- added support for function 3001h (Get Version Flag) which is needed by
  Windows 3.x
- changed default loading for file handles and FCBs to low memory again because
  Windows 3.x seems to have trouble when they are loaded high
- worked around a bug in MASM that led to errors in the DR-DOS header which was
  the reason why the taskswitcher refused to start
- fixed bugs in command.com to make comparisons in batch files with quoted
  strings work as expected
- added support for environment variables on the command line
(24.7.2004):
- added support for internal variables on the command line
- changed function 49h (Free Memory) to merge adjacent free blocks after
  freeing a memory block
- fixed function 7302h (Get Extended DPB) for FAT12/16 drives
- fixed an overflow error that prevented DR-DOS from reading/writing files if
  the seek position was larger than (partition_size modulo 4 GB)
- made command.com stay resident even if not invoked with parameter /P when no
  other primary shell is installed, removed default parameters A: /P
- changed DEVICE command to not insert unnessary spaces into device driver's
  command line
- added new experimental config.sys command VERSION=x.x to allow to change the
  global version setting

7.01.06:
- added support for FAT32 partition types and boot records to disk device
  driver
- expanded sector numbers in buffer management routines from 24 to 32 bit to
  allow partitions larger than 8 GB
- added FAT32 specific entries to DR-DOS file system structures
- rewrote most file system routines to cope with 32-bit cluster numbers and
  dynamic root directories (FAT32)
- added support for FAT32 file system info block to store free disk space
  to speed up disk access
- changed the free disk space routine to use dynamic cluster sizes on FAT32
  partitions to report free space more accurately
- added a routine to command.com to display large numbers with thousands
  delimiters, changed dir command to use it
- fixed bugs in the boot routine to allow booting from 64 KB cluster
  partitions
- fixed bug that caused command.com not to terminate the PSP chain at the
  master PSP, leading to all kinds of problems with the environment space
- fixed bug in dir command that caused the free disk space on partitions with
  64 KB clusters to be displayed as zero
- fixed bug in the memory allocation routine that would cause the install
  command to crash sometimes when upper memory was present
- fixed bug in LBA routines that caused writing problems on some systems, this
  may also speed up writing on other systems
- increased heap space in command.com to prevent corruption of command line
  arguments while processing deeply nested batch files
- fixed bug that sometimes caused XMSDSK to corrupt the last memory block

7.01.05:
- some preliminary changes for 32-bit file system support
- added support for 4 GB FAT16 partitions (64 KB cluster size)

7.01.04:
- added routines to convert LBA values to CHS and vice versa
- rewrote the partition registering routine to use the LBA values in the
  partition tables instead of the obsolete CHS values, disabled old code
- added int 13 extensions (LBA) support to the partition login and track r/w
  routines
- added support for partition type 0eh (FAT16B LBA)

7.01.03:
- added a hex value output routine for debugging purposes
- changed the behavior of the partition registering routine to not follow loops
  in the partition tables

7.01.02:
- changed some text strings to reflect the new version number
- slightly changed the structure of the start-up message routine
- added support for ExtendedX (type 0fh) partitions
- added a routine that checks for and displays the version number of extended
  int 13 (LBA) support
- some preliminary changes for LBA support

7.01.01 (original release):
- fixed the compilation to work with MASM 6.0b and Watcom C/C++ 10.0a
- no user-visible changes
